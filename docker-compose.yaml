configs:
  realm-template:
    file: ./docker/keycloak/dfsps-realm.json

volumes:
  keycloak-import: {}

services:

  connection-manager-ui:
    # This builds the image from a locally cloned repo
    build:
      context: ../connection-manager-ui
      dockerfile: Dockerfile
      args:
        - AUTH_ENABLED=TRUE
        - REACT_APP_COMMIT=${REACT_APP_COMMIT:-unknown}
        - REACT_APP_VERSION=${REACT_APP_VERSION:-unknown}
    hostname: connection-manager-ui
    profiles:
      - dev
    environment:
      - AUTH_ENABLED=TRUE
      - API_BASE_URL=http://localhost:3001
      - LOGIN_URL=http://localhost:3001/api/auth/login
      - LOGOUT_URL=http://localhost:3001/api/auth/logout
      - CHECK_SESSION_URL=http://localhost:3001/api/auth/profile
    tty: true
    stdin_open: true
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      connection-manager-api:
        condition: service_started

  connection-manager-api:
    build:
      context: .
      dockerfile: Dockerfile
    profiles:
      - functional
    environment:
      - DATABASE_HOST=connection-manager-db
      - DATABASE_PORT=3306
      - DATABASE_USER=mcm
      - DATABASE_PASSWORD=mcm
      - DATABASE_SCHEMA=mcm
      - MYSQL_ROOT_PASSWORD=modus123
      - PORT=3001
      - SWITCH_ID=switch
      - VAULT_ENDPOINT=http://vault-dev:8233
      - VAULT_AUTH_METHOD=APP_ROLE
      - VAULT_ROLE_ID_FILE=/vault/tmp/role-id
      - VAULT_ROLE_SECRET_ID_FILE=/vault/tmp/secret-id
      - VAULT_PKI_CLIENT_ROLE=example.com
      - VAULT_PKI_SERVER_ROLE=example.com
      - AUTH_ENABLED=false
      - AUTH_2FA_ENABLED=false
    volumes:
      - ./docker/vault/tmp:/vault/tmp
    tty: true
    stdin_open: true
    ports:
      - "3001:3001"
    restart: always
    depends_on:
      connection-manager-db:
        condition: service_healthy
      vault-dev:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  connection-manager-db:
    image: mysql/mysql-server
    ports:
      - "3306:3306"
    volumes:
      - ./docker/sql-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${DBUSER:-mcm}
      - MYSQL_PASSWORD=${DBPASS:-mcm}
      - MYSQL_DATABASE=${DBUSER:-mcm}
    healthcheck:
      test: mysqladmin ping -h localhost
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  vault-dev:
    image: hashicorp/vault:1.19
    restart: always
    environment:
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8233
      VAULT_ADDR: http://127.0.0.1:8233
      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
      VAULT_LOCAL_CONFIG: '{"backend": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h"}'
    ports:
      - "8233:8233"
    volumes:
      - ./docker/vault/tmp:/vault/tmp
      - ./docker/vault/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: test -f /tmp/service_started
      timeout: 1s
      retries: 20

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    healthcheck:
      test: wget --spider --quiet http://localhost:8025
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  prepare-keycloak-realm:
    image: steinbrueckri/envsubst
    working_dir: /work
    configs:
      - source: realm-template
        target: /template/dfsps-realm.json.template
        mode: 0444
    volumes:
      - keycloak-import:/work            # writeable volume shared with Keycloak
    env_file:
      - ./docker/keycloak/dfsp-realm.env
    entrypoint: |
      sh -c '
        echo "Rendering realm import ..."
        envsubst < /template/dfsps-realm.json.template > /work/dfsps-realm.json
      '
    restart: "no"

  keycloak:
    image: keycloak/keycloak:26.1
    command: start-dev --import-realm
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    volumes:
      - keycloak-import:/opt/keycloak/data/import
    ports:
      - "8080:8080"
    depends_on:
      mailhog:
        condition: service_healthy
      prepare-keycloak-realm:
        condition: service_completed_successfully
    healthcheck:
      test: curl --fail http://localhost:8080/health/ready
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

